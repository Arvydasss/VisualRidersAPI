// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Northwind.Data;

#nullable disable

namespace APIforVisualRiders.Migrations
{
    [DbContext(typeof(VisualRidersContext))]
    partial class VisualRidersContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.1");

            modelBuilder.Entity("apiForVisualRiders.Models.Branch", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("Company")
                        .HasColumnType("TEXT");

                    b.Property<string>("Contacts")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WorkingDays")
                        .HasColumnType("INTEGER");

                    b.Property<string>("WorkingHourEndStr")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WorkingHourStartStr")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Company");

                    b.ToTable("Branch");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f7517440-4dc6-4fe3-8f0f-80fdfd1d35f6"),
                            Address = "AddrStr",
                            Company = new Guid("d1ce4e4b-813f-4c89-9440-19cfb83a7669"),
                            Contacts = "+3706112",
                            Status = 0,
                            WorkingDays = 1,
                            WorkingHourEndStr = "11:11",
                            WorkingHourStartStr = "00:00"
                        });
                });

            modelBuilder.Entity("apiForVisualRiders.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("ActiveSince")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("BillingDetails")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LegalCompanyName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Company");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d1ce4e4b-813f-4c89-9440-19cfb83a7669"),
                            ActiveSince = "1001-01-01",
                            BillingDetails = "lool",
                            LegalCompanyName = "FirstCompany",
                            Name = "FirstCompanyName",
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("cdc4ddcd-2297-4f94-bc59-232eaa163d0f"),
                            ActiveSince = "2222-01-01",
                            BillingDetails = "lool",
                            LegalCompanyName = "SecondCompany",
                            Name = "SecondCompanyName",
                            Status = 0
                        });
                });

            modelBuilder.Entity("apiForVisualRiders.Models.Customer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DiscountId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("RegisterDate")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Customer");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f176747e-1e72-4cc7-b1a2-bea508c6fd4a"),
                            DiscountId = new Guid("5c16ec31-6d8d-4d34-8332-05beb8b4ae37"),
                            Email = "makalyte@gmail.com",
                            Name = "Dalytė",
                            Password = "makalyte123",
                            PhoneNumber = "+3708145141",
                            RegisterDate = new DateTime(2022, 12, 30, 19, 43, 25, 512, DateTimeKind.Local).AddTicks(9071),
                            Status = 1
                        });
                });

            modelBuilder.Entity("apiForVisualRiders.Models.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("RoleId")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Employee");

                    b.HasData(
                        new
                        {
                            Id = new Guid("39424208-f5e1-4798-b0c8-b6035fe4df48"),
                            CompanyId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "arvydas@gmail.com",
                            Name = "Arvydas",
                            Password = "arvydas",
                            RoleId = new Guid("56959975-10b8-4199-b4b1-5705d82eba91"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("86ebf306-3969-4fda-afbf-977c2957cb33"),
                            CompanyId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "danielius@gmail.com",
                            Name = "Danielius",
                            Password = "arvydas",
                            RoleId = new Guid("56959975-10b8-4199-b4b1-5705d82eba91"),
                            Status = 0
                        },
                        new
                        {
                            Id = new Guid("be18c669-83c6-4b5d-b40a-06380a2de3cc"),
                            CompanyId = new Guid("00000000-0000-0000-0000-000000000000"),
                            Email = "paulina@gmail.com",
                            Name = "Paulina",
                            Password = "arvydas",
                            RoleId = new Guid("56959975-10b8-4199-b4b1-5705d82eba91"),
                            Status = 1
                        });
                });

            modelBuilder.Entity("apiForVisualRiders.Models.Permission", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Permission");

                    b.HasData(
                        new
                        {
                            Id = new Guid("1a2fdbd4-3278-4505-920d-106a1826c6ea"),
                            Title = "Secure system"
                        },
                        new
                        {
                            Id = new Guid("563fcbd3-f7c3-4248-9bed-23ae255cdaf0"),
                            Title = "Check employees health insurance"
                        },
                        new
                        {
                            Id = new Guid("d6e76701-49ca-4a6d-ba44-e7cdfc73ff1f"),
                            Title = "Check products"
                        });
                });

            modelBuilder.Entity("apiForVisualRiders.Models.Role", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("PermissionId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("PermissionId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            Id = new Guid("56959975-10b8-4199-b4b1-5705d82eba91"),
                            PermissionId = new Guid("1a2fdbd4-3278-4505-920d-106a1826c6ea"),
                            Title = "Admin"
                        },
                        new
                        {
                            Id = new Guid("c8f9db05-6223-454e-b4e6-bbeb9b6e1918"),
                            PermissionId = new Guid("563fcbd3-f7c3-4248-9bed-23ae255cdaf0"),
                            Title = "Manager"
                        },
                        new
                        {
                            Id = new Guid("b9eac8ed-a3fc-4c57-a435-9e6936d96de6"),
                            PermissionId = new Guid("d6e76701-49ca-4a6d-ba44-e7cdfc73ff1f"),
                            Title = "Bartender"
                        });
                });

            modelBuilder.Entity("apiForVisualRiders.Models.Service", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("BranchId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DiscountId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Status")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("BranchId");

                    b.ToTable("Service");

                    b.HasData(
                        new
                        {
                            Id = new Guid("44f00df9-07e9-4717-99ae-5fea998dbc04"),
                            BranchId = new Guid("f7517440-4dc6-4fe3-8f0f-80fdfd1d35f6"),
                            Description = "Service1Description",
                            DiscountId = new Guid("f1ece8d7-28ce-44c4-b8c4-d112a4a3b741"),
                            Name = "ServiceName",
                            Price = 12.34m,
                            Status = 1
                        });
                });

            modelBuilder.Entity("apiForVisualRiders.Models.Branch", b =>
                {
                    b.HasOne("apiForVisualRiders.Models.Company", null)
                        .WithMany()
                        .HasForeignKey("Company")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("apiForVisualRiders.Models.Employee", b =>
                {
                    b.HasOne("apiForVisualRiders.Models.Role", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("apiForVisualRiders.Models.Role", b =>
                {
                    b.HasOne("apiForVisualRiders.Models.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("apiForVisualRiders.Models.Service", b =>
                {
                    b.HasOne("apiForVisualRiders.Models.Branch", null)
                        .WithMany()
                        .HasForeignKey("BranchId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
